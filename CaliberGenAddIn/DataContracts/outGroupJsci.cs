
//------------------------------------------------------------------------------
// <auto-generated>
  //
  //     This code was generated by Code Generator for
  //     Wrapper        : 
  //     Generated User : WL0035
  //     Generated Date : 15:43:10 03 June 2009
  //     Runtime Version: 1.0.0.0
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  //
  //
//</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.Serialization;
using Employment.Esc.Shared.Contracts.Execution;
using Employment.Esc.Shared.Contracts;
using Microsoft.Practices.EnterpriseLibrary.Validation.Validators;

namespace Employment.Esc.StreamServiceReview.Contracts.DataContracts
{
	[DataContract(Namespace = "http://employment.esc.contracts/2009/03")]
	public class outGroupJsci
	{
		
			// field for JsciAssmtStartDate, to handle the Daylight Savings. 
			private DateTime?  m_jsciAssmtStartDate;
			
			[DataMember]
			[FieldAlias("jsciAssmtStartDate")]
			public DateTime?  JsciAssmtStartDate
			{
				get
				{
					if(m_jsciAssmtStartDate != null)
					{
						return DateTime.SpecifyKind(m_jsciAssmtStartDate.Value, DateTimeKind.Utc);
					}
					return null;
				}
				set
				{
					if(value != null)
					{
						m_jsciAssmtStartDate  = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
					}
				}
			}
			
			// field for m_JsciAssmtStartTime, to handle the Daylight Savings. 
			private DateTime?  m_jsciAssmtStartTime;
			
			[DataMember]
			[FieldAlias("jsciAssmtStartTime")]
			public DateTime?  JsciAssmtStartTime
			{
				get
				{
					if(m_jsciAssmtStartTime != null)
					{
						return new DateTime(1,1,1, m_jsciAssmtStartTime.Value.Hour, m_jsciAssmtStartTime.Value.Minute, m_jsciAssmtStartTime.Value.Second, m_jsciAssmtStartTime.Value.Millisecond, DateTimeKind.Unspecified);
					}
					return null;
			}
			set
			{
				if(value != null)
					m_jsciAssmtStartTime  = new DateTime(1,1,1, value.Value.Hour, value.Value.Minute, value.Value.Second, value.Value.Millisecond, DateTimeKind.Unspecified);
			}
		}
		
		[FieldAlias("yclStatusCode")]
		[DataMember]
		public String  YclStatusCode
		{
			get;
			set;
		}
        
		[FieldAlias("snaAssessmentRequired")]
		[DataMember]
		public String  SnaAssessmentRequired
		{
			get;
			set;
		}
        
		[FieldAlias("snaOutcomeResult")]
		[DataMember]
		public String  SnaOutcomeResult
		{
			get;
			set;
		}
        
			// field for SnaOutcomeDate, to handle the Daylight Savings. 
			private DateTime?  m_snaOutcomeDate;
			
			[DataMember]
			[FieldAlias("snaOutcomeDate")]
			public DateTime?  SnaOutcomeDate
			{
				get
				{
					if(m_snaOutcomeDate != null)
					{
						return DateTime.SpecifyKind(m_snaOutcomeDate.Value, DateTimeKind.Utc);
					}
					return null;
				}
				set
				{
					if(value != null)
					{
						m_snaOutcomeDate  = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
					}
				}
			}
			
		[FieldAlias("reqReasonCd")]
		[DataMember]
		public String  ReqReasonCd
		{
			get;
			set;
		}
        
	}
}
	