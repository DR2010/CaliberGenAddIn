
//------------------------------------------------------------------------------
// <auto-generated>
  //
  //     This code was generated by Code Generator for
  //     Wrapper        : 
  //     Generated User : WL0035
  //     Generated Date : 15:43:10 03 June 2009
  //     Runtime Version: 1.0.0.0
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  //
  //
//</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.Serialization;
using Employment.Esc.Shared.Contracts.Execution;
using Employment.Esc.Shared.Contracts;
using Microsoft.Practices.EnterpriseLibrary.Validation.Validators;

namespace Employment.Esc.StreamServiceReview.Contracts.DataContracts
{
	[DataContract(Namespace = "http://employment.esc.contracts/2009/03")]
	public class outGroupSsr
	{
		
		[FieldAlias("reviewSeqNum")]
		[DataMember]
		public int?  ReviewSeqNum
		{
			get;
			set;
		}
        
		[FieldAlias("statusCd")]
		[DataMember]
		public String  StatusCd
		{
			get;
			set;
		}
        
		[FieldAlias("outcomeCd")]
		[DataMember]
		public String  OutcomeCd
		{
			get;
			set;
		}
        
		[FieldAlias("sourceOutcomeCd")]
		[DataMember]
		public String  SourceOutcomeCd
		{
			get;
			set;
		}
        
			// field for EndDate, to handle the Daylight Savings. 
			private DateTime?  m_endDate;
			
			[DataMember]
			[FieldAlias("endDate")]
			public DateTime?  EndDate
			{
				get
				{
					if(m_endDate != null)
					{
						return DateTime.SpecifyKind(m_endDate.Value, DateTimeKind.Utc);
					}
					return null;
				}
				set
				{
					if(value != null)
					{
						m_endDate  = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
					}
				}
			}
			
		[FieldAlias("streamType")]
		[DataMember]
		public String  StreamType
		{
			get;
			set;
		}
        
		[FieldAlias("streamDays")]
		[DataMember]
		public int?  StreamDays
		{
			get;
			set;
		}
        
		[FieldAlias("totalServiceDays")]
		[DataMember]
		public int?  TotalServiceDays
		{
			get;
			set;
		}
        
		[FieldAlias("commentTxtId")]
		[DataMember]
		public long?  CommentTxtId
		{
			get;
			set;
		}
        
		[FieldAlias("ssrIntegrityControlNumber")]
		[DataMember]
		public int?  SsrIntegrityControlNumber
		{
			get;
			set;
		}
        
			// field for CreationDate, to handle the Daylight Savings. 
			private DateTime?  m_creationDate;
			
			[DataMember]
			[FieldAlias("creationDate")]
			public DateTime?  CreationDate
			{
				get
				{
					if(m_creationDate != null)
					{
						return DateTime.SpecifyKind(m_creationDate.Value, DateTimeKind.Utc);
					}
					return null;
				}
				set
				{
					if(value != null)
					{
						m_creationDate  = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
					}
				}
			}
			
		[FieldAlias("creationUserId")]
		[DataMember]
		public String  CreationUserId
		{
			get;
			set;
		}
        
		[FieldAlias("updateUserId")]
		[DataMember]
		public String  UpdateUserId
		{
			get;
			set;
		}
        
			// field for UpdateDate, to handle the Daylight Savings. 
			private DateTime?  m_updateDate;
			
			[DataMember]
			[FieldAlias("updateDate")]
			public DateTime?  UpdateDate
			{
				get
				{
					if(m_updateDate != null)
					{
						return DateTime.SpecifyKind(m_updateDate.Value, DateTimeKind.Utc);
					}
					return null;
				}
				set
				{
					if(value != null)
					{
						m_updateDate  = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
					}
				}
			}
			
		[FieldAlias("triStatusSeqNum")]
		[DataMember]
		public int?  TriStatusSeqNum
		{
			get;
			set;
		}
        
		[FieldAlias("triStatusCd")]
		[DataMember]
		public String  TriStatusCd
		{
			get;
			set;
		}
        
			// field for TriStatusDate, to handle the Daylight Savings. 
			private DateTime?  m_triStatusDate;
			
			[DataMember]
			[FieldAlias("triStatusDate")]
			public DateTime?  TriStatusDate
			{
				get
				{
					if(m_triStatusDate != null)
					{
						return DateTime.SpecifyKind(m_triStatusDate.Value, DateTimeKind.Utc);
					}
					return null;
				}
				set
				{
					if(value != null)
					{
						m_triStatusDate  = DateTime.SpecifyKind(value.Value, DateTimeKind.Utc);
					}
				}
			}
			
		[FieldAlias("placementType")]
		[DataMember]
		public String  PlacementType
		{
			get;
			set;
		}
        
	}
}
	